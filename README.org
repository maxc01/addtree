#+TITLE: AddTree Covariance Function


* dependencies

This project depends on george, numpy, and scipy. george must be compiled manually.
   #+begin_src sh
git clone https://github.com/maxc01/george
cd george
python setup.py install
   #+end_src

If you are using poetry, 
#+begin_src sh
poetry install
#+end_src


* examples

** synthetic function
   #+begin_src sh
cd examples
python addtree_jenatton_small.py
   #+end_src
log files will be located in =exp_results/addtree/jenatton-small/a-unique-dir=. The following figure shows comparison of different algorithms on optimizaing
the synthetic function.
[[./assets/synthetic-function.png]]

** model compression

    #+begin_src sh
cd examples
python {{ algo }}_model_compression_multiple.py {{ model_name }} OUTPUT_PATH --pretrained PRETRAINED_PATH --prune_epochs 1
    #+end_src
=model_name= can be "vgg16", "resnet50" or "resnet56".
=algo= can be "addtree", "random" , "tpe" or "smac".

For example, to compress resnet50 using =addtree=,
#+begin_src sh
python addtree_model_compression_multiple.py resnet50 OUTPUT_PATH --pretrained PRETRAINED_PATH --prune_epochs 1
#+end_src

The following picture shows comparison of different algorithms on compressing resnet50.
[[./assets/resnet50-cummax-median-95ci.png]]


* citation
#+begin_src bibtex
@inproceedings{Ma2020a,
  TITLE = {Additive tree-structured covariance function for conditional parameter spaces in {Bayesian} optimization},
  AUTHOR = {Ma, Xingchen and Blaschko, Matthew B.},
  BOOKTITLE = {Artificial Intelligence and Statistics},
  YEAR = {2020},
}
#+end_src
